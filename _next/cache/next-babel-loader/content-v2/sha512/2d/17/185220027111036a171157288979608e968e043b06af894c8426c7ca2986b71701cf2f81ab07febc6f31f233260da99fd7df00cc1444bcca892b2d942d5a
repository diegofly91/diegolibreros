{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, TextField, Dialog, Tooltip, FormControl, DialogActions, DialogContent, DialogTitle } from '@material-ui/core/';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  textFieldArea: {\n    width: '100%',\n    minHeight: '100px!important',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  button: {\n    padding: '10px 10px',\n    textTransform: 'capitalize',\n    marginTop: 0,\n    marginBottom: 0,\n    border: 'none',\n    zIndex: 11,\n    color: 'white',\n    width: 150\n  },\n  icon: {\n    marginRight: 10\n  },\n  close: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    zIndex: 2\n  },\n  contButton: {\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end'\n  },\n  btnPlus: {\n    position: 'absolute',\n    right: 15,\n    color: '#000',\n    top: 15\n  }\n}));\nexport default function NewBtnItem({\n  column,\n  addItem\n}) {\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const title = useInputValue('');\n  const description = useInputValue('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: handleClickOpen,\n    className: classes.btnPlus,\n    size: \"small\"\n  }, __jsx(Tooltip, {\n    title: \"Agregar Item\",\n    placement: \"top\"\n  }, __jsx(AddCircleOutlineIcon, {\n    fontSize: \"default\"\n  }))), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(IconButton, {\n    className: classes.close,\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    onClick: handleClose\n  }, __jsx(HighlightOffIcon, null)), __jsx(FormControl, {\n    onKeyPress: e => {// e.key === 'Enter' && onFormSubmit();\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Agregar Item\"), __jsx(DialogContent, null, __jsx(TextField, _extends({\n    size: \"medium\",\n    autoFocus: true,\n    required: true,\n    margin: \"normal\",\n    id: \"title\",\n    label: \"Titulo\"\n  }, title, {\n    variant: \"outlined\",\n    className: classes.textField\n  })), __jsx(TextField, _extends({\n    size: \"medium\",\n    required: true,\n    id: \"description\",\n    label: \"Discripci\\xF3n\",\n    multiline: true,\n    rows: 4,\n    fullWidth: true\n  }, description, {\n    variant: \"outlined\",\n    className: classes.textFieldArea\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: title.defaultValue ? false : true,\n    className: classes.button,\n    onClick: () => {\n      handleClose();\n      addItem({\n        title: title.defaultValue,\n        description: description.defaultValue,\n        column\n      });\n    }\n  }, \"Agregar\"))))));\n}\n\nconst useInputValue = initialValue => {\n  const {\n    0: defaultValue,\n    1: setValue\n  } = useState(initialValue);\n\n  const onChange = e => {\n    e.target.getAttribute(\"type\") == \"number\" && e.target.value !== \"\" ? setValue(Number(e.target.value)) : setValue(e.target.value);\n  };\n\n  return {\n    defaultValue,\n    onChange\n  };\n};","map":null,"metadata":{},"sourceType":"module"}