{"ast":null,"code":"import _extends from \"/Users/postareservas/Desktop/diegolibreros/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, TextField, Dialog, Tooltip, FormControl, DialogActions, DialogContent, DialogTitle } from '@material-ui/core/';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    textField: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    textFieldArea: {\n      width: '100%',\n      minHeight: '100px!important',\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    button: {\n      padding: '10px 10px',\n      textTransform: 'capitalize',\n      marginTop: 0,\n      marginBottom: 0,\n      border: 'none',\n      zIndex: 11,\n      color: 'white',\n      width: 150\n    },\n    icon: {\n      marginRight: 10\n    },\n    close: {\n      position: 'absolute',\n      top: 10,\n      right: 10,\n      zIndex: 2\n    },\n    contButton: {\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    btnPlus: {\n      position: 'absolute',\n      right: 15,\n      color: '#000',\n      top: 15\n    }\n  };\n});\nexport default function NewBtnItem(_ref) {\n  var column = _ref.column,\n      addItem = _ref.addItem;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var title = useInputValue('');\n  var description = useInputValue('');\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: handleClickOpen,\n    className: classes.btnPlus,\n    size: \"small\"\n  }, __jsx(Tooltip, {\n    title: \"Agregar Item\",\n    placement: \"top\"\n  }, __jsx(AddCircleOutlineIcon, {\n    fontSize: \"default\"\n  }))), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(IconButton, {\n    className: classes.close,\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    onClick: handleClose\n  }, __jsx(HighlightOffIcon, null)), __jsx(FormControl, {\n    onKeyPress: function onKeyPress(e) {// e.key === 'Enter' && onFormSubmit();\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Agregar Item\"), __jsx(DialogContent, null, __jsx(TextField, _extends({\n    size: \"medium\",\n    autoFocus: true,\n    required: true,\n    margin: \"normal\",\n    id: \"title\",\n    label: \"Titulo\"\n  }, title, {\n    variant: \"outlined\",\n    className: classes.textField\n  })), __jsx(TextField, _extends({\n    size: \"medium\",\n    required: true,\n    id: \"description\",\n    label: \"Discripci\\xF3n\",\n    multiline: true,\n    rows: 4,\n    fullWidth: true\n  }, description, {\n    variant: \"outlined\",\n    className: classes.textFieldArea\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: title.defaultValue ? false : true,\n    className: classes.button,\n    onClick: function onClick() {\n      handleClose();\n      addItem({\n        title: title.defaultValue,\n        description: description.defaultValue,\n        column: column\n      });\n    }\n  }, \"Agregar\"))))));\n}\n\nvar useInputValue = function useInputValue(initialValue) {\n  var _useState2 = useState(initialValue),\n      defaultValue = _useState2[0],\n      setValue = _useState2[1];\n\n  var onChange = function onChange(e) {\n    e.target.getAttribute(\"type\") == \"number\" && e.target.value !== \"\" ? setValue(Number(e.target.value)) : setValue(e.target.value);\n  };\n\n  return {\n    defaultValue: defaultValue,\n    onChange: onChange\n  };\n};","map":null,"metadata":{},"sourceType":"module"}